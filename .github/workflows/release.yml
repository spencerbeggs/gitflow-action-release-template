name: "release"
on:
  push:
    branches:
      - develop
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          password: ${{ secrets.CR_PAT }}
          username: ${{ github.repository_owner }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          target: deploy
          tags: spencerbeggs/gitflow-action-release-template:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  # build:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     repo: ${{ steps.meta.outputs.repo }}
  #     tag: ${{ steps.meta.outputs.tag }}
  #     package_name: ${{ steps.meta.outputs.package_name }}
  #     zip_file: ${{ steps.meta.outputs.zip_file }}
  #     tar_file: ${{ steps.meta.outputs.tar_file }}
  #   steps:
  #     - name: checkout source
  #       uses: actions/checkout@v2
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: setup Node
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "12"
  #     - name: meta
  #       id: meta
  #       shell: bash
  #       run: |
  #         REPO=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
  #         SOURCE_TAG=$(echo ${GITHUB_REF:10})
  #         TAG=$(echo ${GITHUB_REF:17})
  #         PACKAGE="$REPO-$TAG"
  #         echo ::set-output name=repo::"$REPO"
  #         echo ::set-output name=source_tag::"$SOURCE_TAG"
  #         echo ::set-output name=tag::"$TAG"
  #         echo ::set-output name=version::"v$TAG"
  #         echo ::set-output name=package_name::"$PACKAGE"
  #         echo ::set-output name=zip_file::"$PACKAGE.zip"
  #         echo ::set-output name=tar_file::"$PACKAGE.tar.gz"
  #     - name: build
  #       run: |
  #         yarn install --production=false --frozen-lockfile
  #         yarn build
  #     - name: checkout target
  #       uses: actions/checkout@v2
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         clean: false
  #         ref: marketplace
  #     - name: merge and tag
  #       run: |
  #         git config --global push.followTags true
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@users.noreply.github.com"
  #         git rm -r .
  #         rsync -var --include=".*"  dist/ ./
  #         rm -rf dist
  #         git add .
  #         git commit -m "merge changes from ${{ steps.meta.outputs.version }}"
  #         git tag -m "${{ steps.meta.outputs.version }}" ${{ steps.meta.outputs.version }}
  #         git push origin
  #         git push --delete origin ${{ steps.meta.outputs.source_tag }}
  #     - name: release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.meta.outputs.version }}
  #         release_name: ${{ steps.meta.outputs.version }}
